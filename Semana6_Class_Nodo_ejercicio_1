
using System;

class Nodo
{
    // Representa un nodo en la lista enlazada
    public int Dato { get; set; } // Valor del nodo
    public Nodo Siguiente { get; set; } // Referencia al siguiente nodo

    // Constructor que inicializa el nodo con un valor
    public Nodo(int dato)
    {
        Dato = dato;
        Siguiente = null;
    }
}

class ListaEnlazada
{
    public Nodo Cabeza { get; private set; } // Primer nodo de la lista

    // Método para agregar un nodo al inicio de la lista
    public void AgregarInicio(int dato)
    {
        Nodo nuevoNodo = new Nodo(dato)
        {
            Siguiente = Cabeza // El nuevo nodo apunta al nodo actual de la cabeza
        };
        Cabeza = nuevoNodo; // El nuevo nodo se convierte en la cabeza de la lista
    }

    // Método para calcular la longitud de la lista enlazada
    public int CalcularLongitud()
    {
        int longitud = 0;
        Nodo actual = Cabeza;

        // Recorrer la lista hasta el final, contando los nodos
        while (actual != null)
        {
            longitud++; // Contar el nodo actual
            actual = actual.Siguiente; // Mover al siguiente nodo
        }

        return longitud; // Devolver el número de nodos contados
    }
}

class Program
{
    static void Main(string[] args)
    {
        ListaEnlazada lista = new ListaEnlazada();

        // Agregar algunos elementos a la lista
        lista.AgregarInicio(10);
        lista.AgregarInicio(20);
        lista.AgregarInicio(30);

        // Calcular y mostrar la longitud de la lista
        int longitud = lista.CalcularLongitud();
        Console.WriteLine("La longitud de la lista es: " + longitud); // Mostrar la longitud de la lista
    }
}
